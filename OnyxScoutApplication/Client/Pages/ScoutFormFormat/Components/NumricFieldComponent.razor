@using Syncfusion.Blazor.Inputs
@using System.Diagnostics.CodeAnalysis;

@inherits FormInputBase<int?>
<div>
    @if (IsEditMode)
    {
        <label for="name">Field default value</label>
    }
    <SfNumericTextBox @bind-Value="CurrentValue"/>
    <ValidationMessage For="@ValueExpression"/>
</div>
@if (IsEditMode)
{
    <div>
        <SfCheckBox Label="Required" CssClass="e-big" @bind-Checked="Field.Required"/>
        <ValidationMessage For="@(() => Field.Required)"/>
    </div>

    <div>
        <label for="name">Min value</label>
        <SfNumericTextBox @bind-Value="@Field.MinValue"/>
        <ValidationMessage For="@(() => Field.MinValue)"/>
    </div>
    <div>
        <label for="name">Max value</label>
        <SfNumericTextBox @bind-Value="@Field.MaxValue"/>
        <ValidationMessage For="@(() => Field.MaxValue)"/>
    </div>
}

@code {

    protected override bool TryParseValueFromString(string value, out int? result, [NotNullWhen(false)] out string validationErrorMessage)
    {
        validationErrorMessage = null;
        if (string.IsNullOrWhiteSpace(value))
        {
            result = null;
            return true;
        }
        bool success = int.TryParse(value, out int val);
        if (!success)
        {
            validationErrorMessage = "Value has to be a number";
        }
        result = (int?) val;
        return success;
    }

}
