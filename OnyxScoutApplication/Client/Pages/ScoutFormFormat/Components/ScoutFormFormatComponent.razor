<EditForm Model="@ScoutFormFormat" OnValidSubmit="@OnValidSubmit">
    <FluentValidationValidator DisableAssemblyScanning="@true" />


    <div class="form-group col-sm-5">
        <div>
            <label for="year">Year</label>
            <InputNumber class="form-control" @bind-Value="ScoutFormFormat.Year" />
            <ValidationMessage For="@(() => ScoutFormFormat.Year)" />
        </div>
        <br />
        <h3>Autonomous</h3>
        <FieldsEditor Fields="ScoutFormFormat.AutonomousFields"></FieldsEditor>
        <h3>Teleoperated</h3>
        <FieldsEditor Fields="ScoutFormFormat.TeleoperatedFields"></FieldsEditor>
        <h3>End-game</h3>
        <FieldsEditor Fields="ScoutFormFormat.EndGameFields"></FieldsEditor>
    </div>
   
    <br />
    @{var v = (Type == FormType.Create ? "Add" : "Save");}
    <button type="submit" class="btn btn-primary">@v</button>
</EditForm>

@code {
    [Parameter]
    public ScoutFormFormatDto ScoutFormFormat { get; set; }
    [Parameter]
    public EventCallback OnValidSubmit { get; set; }
    [Parameter]
    public FormType Type { get; set; }
}