@page "/TeamDetails/Notes/{teamNumber:int}"

@inject HttpClientManager Http
@inject ILocalStorageService LocalStorage
@if (endGameNotes != null)
{
    <h3>Team @TeamNumber</h3>
    <h4>@selectedEvent?.Name</h4>
    <div>
        <h5>Autonomous notes</h5>
        <br/>

        @foreach (var (scoutFormData, writer) in autonomousNotes)
        {
            foreach (var text in scoutFormData)
            {
                <div>
                    <SfTextBox Value="@text.StringValue" Width="60%" Readonly="true" Multiline="true"></SfTextBox>
                    <span>@writer</span>
                </div>
                <br/>
            }
        }

        <h5>Teleoperated notes</h5>
        <br/>

        @foreach (var (scoutFormData, writer) in teleoperatedNotes)
        {
            foreach (var text in scoutFormData)
            {
                <div>
                    <SfTextBox Value="@text.StringValue" Width="60%" Readonly="true" Multiline="true"></SfTextBox>
                    <span>@writer</span>
                </div>
                <br/>
            }
        }

        <h5>End game notes</h5>
        <br/>

        @foreach (var (scoutFormData, writer) in endGameNotes)
        {
            foreach (var text in scoutFormData)
            {
                <div>
                    <SfTextBox Value="@text.StringValue" Width="60%" Readonly="true" Multiline="true"></SfTextBox>
                    <span>@writer</span>
                </div>
                <br/>
            }
        }
    </div>
}

@code {

    [Parameter]
    public int TeamNumber { get; set; }

    private Tuple<ScoutFormDataDto[], string>[] autonomousNotes;
    private Tuple<ScoutFormDataDto[], string>[] teleoperatedNotes;
    private Tuple<ScoutFormDataDto[], string>[] endGameNotes;
    private Event selectedEvent;

    protected override async Task OnInitializedAsync()
    {
        selectedEvent = await LocalStorage.GetItemAsync<Event>("EventSelector/SelectedEventKey");
        if (selectedEvent == null)
        {
            return;
        }

        var result = await Http.GetJson<List<ScoutFormDto>>("ScoutForm/GetAllByTeam/" + TeamNumber + "/" + selectedEvent.Key);

        autonomousNotes = result.Select(i => new Tuple<ScoutFormDataDto[], string>(i.AutonomousData.Where(f => f.Field.FieldType == FieldType.TextField).ToArray(), i.WriterUserName)).ToArray();
        teleoperatedNotes = result.Select(i => new Tuple<ScoutFormDataDto[], string>(i.TeleoperatedData.Where(f => f.Field.FieldType == FieldType.TextField).ToArray(), i.WriterUserName)).ToArray();
        endGameNotes = result.Select(i => new Tuple<ScoutFormDataDto[], string>(i.EndGameData.Where(f => f.Field.FieldType == FieldType.TextField).ToArray(), i.WriterUserName)).ToArray();
    }

}
