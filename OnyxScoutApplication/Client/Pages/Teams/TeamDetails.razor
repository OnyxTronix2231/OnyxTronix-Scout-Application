@page "/TeamDetails/{TeamNumber:int}"
@using OnyxScoutApplication.Client.Others.Objects.Analyzers.TeamData
@inject HttpClientManager Http
@inject ILocalStorageService LocalStorage
@inject NavigationManager NavigationManager
@attribute [OnyxAuthorize(Role = Role.Scouter)]

@if (calculatedDataByStages != null)
{
    <h3>Team @TeamNumber</h3>
    <h4>@selectedEvent?.Name</h4>
    <a href="/TeamDetails/Notes/@TeamNumber">Notes</a>
    <br/>
    foreach (var (key, value) in calculatedDataByStages)
    {
        <h5>@key</h5>
        <TeamAnalyticGrid CalculatedData="@value"></TeamAnalyticGrid>
        <br/>
 }

    <br/>
    <MatchesGrid Matches="matches" OnTeamClicked="OnTeamClicked">
        <MatchGridSettings SubmittedForms = "@data" TeamNumber = "@TeamNumber" ></MatchGridSettings>
    </MatchesGrid>
}

@code {

    [Parameter]
    public int TeamNumber { get; set; }

    private Event selectedEvent;
    private List<ScoutFormDto> data;
    private Dictionary<StageDto, List<TeamFieldAverage>> calculatedDataByStages;
    private List<Match> matches;

    protected override async Task OnInitializedAsync()
    {
        selectedEvent = await LocalStorage.GetItemAsync<Event>("EventSelector/SelectedEventKey");
        if (selectedEvent == null)
        {
            return;
        }
        var format = await Http.GetJson<ScoutFormFormatDto>("ScoutFormFormat/ByYear/" + selectedEvent.Year);
        var result = await Http.GetJson<List<ScoutFormDto>>("ScoutForm/GetAllByTeam/" + TeamNumber + "/" + selectedEvent.Key);
        data = result.OrderBy(i => i.MatchName).ToList();
        matches = (await Http.GetJson<List<Match>>
            ("TheBlueAlliance/GetMatchesByTeamAndEvent/" + TeamNumber + "/" + selectedEvent.Key))
            .OrderBy(i => i.Date).ToList();
        calculatedDataByStages = new Dictionary<StageDto, List<TeamFieldAverage>>();
        foreach (var (key, value) in format.FieldsesInByStages)
        {
            calculatedDataByStages.Add(key, TeamDataAnalyzer.CalculateDataFor(value, result,
                scoutForm => scoutForm.DataByStages[key], s => true));
        }
       
    }

    private void OnTeamClicked(TeamInMatch teamInMatch)
    {
        if (teamInMatch.TeamNumber != TeamNumber)
        {
            NavigationManager.NavigateTo("TeamDetails/" + teamInMatch.TeamNumber, true);
        }
    }

}
