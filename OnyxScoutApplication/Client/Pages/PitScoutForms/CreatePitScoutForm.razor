@page "/PitScoutForm/Create/{TeamNumber:int}"
@using OnyxScoutApplication.Shared.Models.ScoutFormModels
@using System.Net.Http.Headers
@using System.Net
@inject HttpClientManager Http
@inject NavigationManager NavigationManager
@inject ILocalStorageService LocalStorage
@inject NotificationManager NotificationManager
@attribute [OnyxAuthorize(Role = Role.Scouter)]

@if (form != null)
{
    <h3>Pit scout form</h3>
    <div style="float: right;">
        <SfButton type="button" CssClass="e-success" @onclick="SaveOnLocalCache">Save locally</SfButton>
        <SfButton type="button" CssClass="e-danger" @onclick="DeleteLocalCache">Delete local cache</SfButton>
    </div>
    <ScoutFromComponent @ref="scoutForm" Form="form" Type="FormType.Create" OnValidSubmit="OnValidSubmit"
                        ShowImageUpload="true">
    </ScoutFromComponent>
}

@code {

    [CascadingParameter]
    public Task<AuthenticationState> AuthenticationStateTask { get; set; }
    
    [Parameter]
    public int TeamNumber { get; set; }

    private FormDto form;
    private ScoutFromComponent scoutForm;
    private bool imageUploadFailed;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateTask;
        var user = authState.User;
        var selectedYear = await LocalStorage.GetItemAsync<int?>("EventSelector/SelectedYearFilter");
        var selectedEvent = await LocalStorage.GetItemAsync<Event>("EventSelector/SelectedEventKey");
        if (selectedEvent is null || selectedYear is null)
        {
            await NotificationManager.NotifyAsync("Please select event and year first!", "", NotificationType.Danger);
            return;
        }
        
        form = await Http.GetJson<FormDto>("ScoutFormFormat/TemplateScoutFormByYear/" +
                                           $"{selectedYear!.Value}/{ScoutFormType.Pit}");
        if (form == null)
        {
            await NotificationManager.NotifyAsync("No scout form found for  pit scouting!", "", NotificationType.Danger);
            NavigationManager.NavigateTo("/");
            return;
        }
        
        if(await LocalStorage.ContainKeyAsync($"ScoutForm/{selectedEvent.Key}/{TeamNumber}"))
        {
            form = await LocalStorage.GetItemAsync<FormDto>($"ScoutForm/{selectedEvent.Key}/{TeamNumber}");
            return;
        }
        
        form.TeamNumber = TeamNumber;
        form.Year = selectedYear!.Value;
        form.Type = ScoutFormType.Pit;
        // form.KeyName = selectedEvent.Key;
        form.EventName = selectedEvent.Key;
        form.MatchNumber = null;
        form.SetNumber = null;
        form.WriterUserName = user.Identity!.Name;
    }

    private async Task OnValidSubmit()
    {
        if (form.ImageRequired)
        {
            await UploadWithImage();
            return;
        }

        if (await Http.TryPostJson("ScoutForm", form))
        {
            NavigationManager.NavigateTo("/");
            return;
        }
        await SaveOnLocalCache();
        await NotificationManager.NotifyAsync("Error",
            "Error saving form in server\nThe form was saved localy for now", NotificationType.Warning);
    }

    private async Task UploadWithImage()
    {
        if (scoutForm.Content == null)
        {
            await NotificationManager.NotifyAsync("Error",
                "Image is required\nMake sure to get the good side profile of the robot! :P", NotificationType.Warning);
            return;
        }
        
        if (imageUploadFailed)
        {
            var success =
                await Http.TryPostJson($"/ScoutForm/SaveImage/{TeamNumber}/{form.KeyName}", scoutForm.Content);
            if (success)
            {
                NavigationManager.NavigateTo("/");
                return;
            }

            return;
        }

        if (await Http.TryPostJson("ScoutForm", form))
        {
            var success =
                await Http.TryPostJson($"/ScoutForm/SaveImage/{TeamNumber}/{form.KeyName}", scoutForm.Content);

            if (success)
            {
                NavigationManager.NavigateTo("/");
                return;
            }
            await NotificationManager.NotifyAsync("Error",
                "Failed uploading image!\nTry something else", NotificationType.Warning);

            imageUploadFailed = true;
        }
        else
        {
            await SaveOnLocalCache();
            await NotificationManager.NotifyAsync("Error",
                "Error saving form in server\nThe form was saved localy for now", NotificationType.Warning);
        }
    }

    private async Task SaveOnLocalCache()
    {
        await LocalStorage.SetItemAsync($"ScoutForm/{form.KeyName}/{form.TeamNumber}" ,form);
    }
    
    private async Task DeleteLocalCache()
    {
        if (!await LocalStorage.ContainKeyAsync($"ScoutForm/{form.KeyName}/{form.TeamNumber}"))
        {
            await NotificationManager.NotifyAsync("No form was found on local cache!", "", NotificationType.Warning);
            return;
        }
        await LocalStorage.RemoveItemAsync($"ScoutForm/{form.KeyName}/{form.TeamNumber}");
    }
}
