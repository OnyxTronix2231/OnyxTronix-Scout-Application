@page "/ScoutForms"
@using OnyxScoutApplication.Shared.Models.ScoutFormModels
@inject NavigationManager navigationManager
@inject HttpClientManager http
@attribute [OnyxAuthorize(Role = Role.Scouter)]
<h1>ScoutForms</h1>
@if (scoutForms == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Team number</th>
            <th>Year</th>
            <th>Match name</th>
            <th>Writer user name</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var scoutForm in scoutForms)
        {
            <tr>
                <td>@scoutForm.TeamNumber</td>
                <td>@scoutForm.Year</td>
                <td>@scoutForm.MatchName</td>
                <td>@scoutForm.WriterUserName</td>
                <OnyxAuthorizeView Role="@(Role.Admin)">
                    <SfButton CssClass="e-warning" @onclick="() => Edit(scoutForm)">Edit</SfButton>
                </OnyxAuthorizeView>
                <SfButton CssClass="e-info" @onclick="() => View(scoutForm)" style="margin-left :5px">View</SfButton>
            </tr>
        }
        </tbody>
    </table>
}


@code {
    private List<FormDto> scoutForms;

    protected override async Task OnInitializedAsync()
    {
        scoutForms = await http.GetJson<List<FormDto>>("ScoutForm");
    }

    private void Edit(FormDto form)
    {
        navigationManager.NavigateTo("ScoutForm/Edit/" + form.Id);
    }
    
    private void View(FormDto form)
    {
        navigationManager.NavigateTo("ScoutForm/View/" + form.Id);
    }

}
