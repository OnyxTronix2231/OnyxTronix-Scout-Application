@using OnyxScoutApplication.Shared.Models.ScoutFormModels
<h3>ScoutFromComponent</h3>

<EditForm Model="@Form" OnValidSubmit="@OnValidSubmit">
    <FluentValidationValidator/>
    <div class="form-group col-sm-5">
        <label for="teamNumber">Team number</label>
        <input class="form-control" type="number" id="teamNumber" value="@Form.TeamNumber" readonly="readonly"/>
    </div>
    <div class="form-group col-sm-5">
        <label for="year">Year</label>
        <input class="form-control" type="number" id="year" value="@Form.Year" readonly="readonly"/>
    </div>
    <div class="form-group col-sm-5">
        <label for="matchName">Match name</label>
        <input class="form-control" type="text" id="matchName" value="@Form.MatchName" readonly="readonly"/>
    </div>
    <div class="form-group col-sm-5">
        <label for="matchName">Writer</label>
        <input class="form-control" type="text" id="matchNumber" value="@Form.WriterUserName" readonly="readonly"/>
    </div>

    <div class="form-group col-sm-5">
        @foreach (var formDataInStages in Form.FormDataInStages)
        {
            <SectionEdit SectionData="@formDataInStages.FormData" SectionName="@formDataInStages.Name"></SectionEdit>
        }
    </div>

    <div>
        <button type="submit" class="btn btn-primary">@(Type == FormType.Create ? "Add" : "Save")</button>
    </div>
</EditForm>

@code {

    [Parameter]
    public FormDto Form { get; set; }

    [Parameter]
    public EventCallback OnValidSubmit { get; set; }

    [Parameter]
    public FormType Type { get; set; }

}
