@page "/EventAnalytics"
@inject ILocalStorageService LocalStorage
@inject HttpClientManager Http
@inject NavigationManager NavigationManager
@inject NotificationManager NotificationManager
@attribute [OnyxAuthorize(Role = Role.Scouter)]

@if (fields != null)
@* { *@
@*     <EventAnalyticGrid Teams="teams" Fields="fields" ScoutForms="scoutForms" GetTargetList="@(s => s.DataByStages.SelectMany(i => i.Value).ToList())" *@
@*                        OnTeamClicked="OnTeamClicked" EventAnalyticSettings="analyticSettings"/> *@
@* } *@

@code {
    private Event selectedEvent;
    private List<ScoutFormDto> scoutForms = new List<ScoutFormDto>();
    private List<Team> teams = new List<Team>();
    private ScoutFormFormatDto format = new ScoutFormFormatDto();
    private List<FieldDto> fields = new List<FieldDto>();
    private EventAnalyticSettingsDto analyticSettings;

    protected override async Task OnInitializedAsync()
    {
        selectedEvent = await LocalStorage.GetItemAsync<Event>("EventSelector/SelectedEventKey");
        if (selectedEvent == null)
        {
            NotificationManager.Notify("Please select an event first", "", NotificationType.Warning);
            NavigationManager.NavigateTo("/");
            return;
        }

        format = await Http.GetJson<ScoutFormFormatDto>("ScoutFormFormat/ByYear/" + selectedEvent.Year);
        scoutForms = await Http.GetJson<List<ScoutFormDto>>("ScoutForm/GetAllByEvent/" + selectedEvent.Key);
        teams = await Http.GetJson<List<Team>>("TheBlueAlliance/GetAllTeams/" + selectedEvent.Key);
        if (await LocalStorage.ContainKeyAsync("EventAnalyticSettings/" + selectedEvent.Key))
        {
            analyticSettings = await LocalStorage.GetItemAsync<EventAnalyticSettingsDto>("EventAnalyticSettings/" + selectedEvent.Key);
        }
        throw new NotImplementedException();
       // fields = format.FieldsesInByStages.SelectMany(i => i.Value.ConcatAllCascadeFields().Where(f => f.FieldType != FieldType.TextField)).ToList();
    }

    private void OnTeamClicked(int teamNumber)
    {
        NavigationManager.NavigateTo("TeamDetails/" + teamNumber);
    }

}
