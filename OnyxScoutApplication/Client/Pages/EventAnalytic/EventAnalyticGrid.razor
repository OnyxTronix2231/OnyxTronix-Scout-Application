@using System.Dynamic
@using System.Security
@using Newtonsoft.Json
@using OnyxScoutApplication.Shared.Other.Analyzers
@using Syncfusion.Blazor.Schedule.Internal
@inject HttpClientManager Http

@* @inherits TeamsAnalyzer *@
<div style="width: calc(90vw); height: 90vh">
    @if (CalculatedTeamsData != null && CalculatedTeamsData.Count != 0)
    {
        <SfGrid @ref="Grid" FrozenColumns="1" AllowTextWrap="false" DataSource="@CalculatedTeamsData" AllowReordering="true"
                AllowFiltering="true" AllowResizing="true" AllowSorting="true" AllowMultiSorting="true"
                Toolbar="@toolbarItems" ShowColumnChooser="true" Width="auto" Height="100%">
            <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
            <GridEvents Created="LoadHandler" TValue="ExpandoObject"></GridEvents>
            <GridColumns>
                <GridColumn AllowReordering="false" ShowInColumnChooser="false" HeaderText="Team" Field="TeamNumber" AllowFiltering="true"
                            FilterSettings="@(new FilterSettings { Type = Syncfusion.Blazor.Grids.FilterType.CheckBox })"
                            Width="110px">
                    <Template>
                        @{
                            var v = (dynamic)context;
                            <div>
                                <LinkTabOpener Url="@($"TeamDetails/{v.TeamNumber}")" Text="@v.Nickname"> </LinkTabOpener>
                                <br/>
                                <LinkTabOpener Url="@($"TeamDetails/{v.TeamNumber}")" Text="@v.TeamNumber.ToString()"> </LinkTabOpener>
                            </div>
                        }
                    </Template>
                </GridColumn>
                @for (int i = 0; i < ColumnsFields.Count; i++)
                {
                    int index = i;
                    string nameId = ColumnsFields[index].Id;
                    string name = ColumnsFields[index].Name;
                    var rawValue = "RawValue" + nameId;
                    Console.WriteLine("@name: " + ColumnsFields[index].MarkupName);

                    <GridColumn AutoFit="false" HeaderText="@name" Field="@rawValue" AllowReordering="true"
                                AllowResizing="true" Type="ColumnType.Number">
                        <HeaderTemplate>
                            <div>
                                <span>@ColumnsFields[index].MarkupName</span>
                            </div>
                        </HeaderTemplate>
                        <Template>
                            @{
                                var v = (IDictionary<string, object>)context;
                                var s = new MarkupString(v[nameId].ToString() ?? "");
                            }
                            <span>@s</span>
                        </Template>
                    </GridColumn>
                }
            </GridColumns>
        </SfGrid>
    }
</div>

@code {

    [Parameter]
    public List<ExpandoObject> CalculatedTeamsData { get; set; }

    [Parameter]
    public List<ColumnField> ColumnsFields { get; set; }

    private readonly string[] toolbarItems = { "ColumnChooser" };
    public SfGrid<ExpandoObject> Grid { get; set; }


    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }

    private async Task LoadHandler()
    {
        await Grid.AutoFitColumnsAsync(ColumnsFields.Select(i => "RawValue" + i.Id).ToArray());
    }

}


<style>
    .clickable {
        cursor: pointer
    }
    
        .e-grid .e-gridheader { 
            position: -webkit-sticky; 
            position: sticky; 
            top: 56px; /* The height of top nav menu. */ 
            z-index: 1; 
        } 
</style>
