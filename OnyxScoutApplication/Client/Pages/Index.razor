@page "/"
@inject ISyncLocalStorageService SyncLocalStorage
@inject HttpClientManager Http
@inject NavigationManager NavigationManager
@inject ILocalStorageService LocalStorage
@attribute [Authorize(Roles = Roles.Scouter)]

<h1>Events</h1>

<div>
    <EventSelector OnEventSelectionChange="UpdateMatchTable"></EventSelector>
</div>

<div>
    <MatchesGrid Matches="qMatches" SubmittedForms="scoutForms" Height="400" OnTeamClicked="OnTeamClicked"></MatchesGrid>
</div>

<br/>
<div>
    <MatchesGrid Matches="qfMatches" SubmittedForms="scoutForms" OnTeamClicked="OnTeamClicked"></MatchesGrid>
</div>

<br/>
<div>
    <MatchesGrid Matches="sfMatches" SubmittedForms="scoutForms" OnTeamClicked="OnTeamClicked"></MatchesGrid>
</div>

<br/>
<div>
    <MatchesGrid Matches="fMatches" SubmittedForms="scoutForms" OnTeamClicked="OnTeamClicked"></MatchesGrid>
</div>

@code {
    private List<Match> qMatches;
    private List<Match> qfMatches;
    private List<Match> sfMatches;
    private List<Match> fMatches;
    private List<ScoutFormDto> scoutForms;

    protected override async Task OnInitializedAsync()
    {
        if (await LocalStorage.ContainKeyAsync("TheBlueAlliance.AllMatches"))
        {
            var matches = await LocalStorage.GetItemAsync<List<Match>>("TheBlueAlliance.AllMatches");
            scoutForms = await LocalStorage.GetItemAsync<List<ScoutFormDto>>("ScoutForms.All");
            UpdateByMatches(matches);
        }
    }

    
    private async Task UpdateMatchTable(Event selectedEvent)
    {
        var matches = await Http.GetJson<List<Match>>("TheBlueAlliance/GetAllMatches/" + selectedEvent.Key);
        await LocalStorage.SetItemAsync("TheBlueAlliance.AllMatches", matches);
        scoutForms = await Http.GetJson<List<ScoutFormDto>>("ScoutForm/GetAllByEvent/" + selectedEvent.Key);
        UpdateByMatches(matches);
    }

    private void UpdateByMatches(List<Match> matches)
    {
        matches = matches.OrderBy(i => i.Date).ToList();
        qMatches = matches.Where(i => i.Level == "qm").ToList();
        qfMatches = matches.Where(i => i.Level == "qf").ToList();
        sfMatches = matches.Where(i => i.Level == "sf").ToList();
        fMatches = matches.Where(i => i.Level == "f").ToList();
    }

    private void OnTeamClicked(TeamInMatch teamInMatch)
    {
        if (!teamInMatch.IsFormExists)
        {
            SyncLocalStorage.SetItem("ScoutForm/TeamInMatch", teamInMatch);
            NavigationManager.NavigateTo("ScoutForm/Create");
        }
        else
        {
            NavigationManager.NavigateTo("TeamDetails/" + teamInMatch.TeamNumber);
        }
    }

}
