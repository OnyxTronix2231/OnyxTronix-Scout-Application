@using Microsoft.JSInterop;

@inherits LayoutComponentBase
@inject NotificationManager NotificationManager
@inject NavigationManager NavigationManager
@inject IJSRuntime  JSRuntime

<div class="sidebar">
    <NavMenu />
</div>
<Toast></Toast>

<div class="main">
    <div class="top-row px-4 auth">
        <LoginDisplay />
    </div>

    <div class="content px-4">
        @Body
    </div>
</div>
@code{
    bool updateReady;
    protected override async Task OnInitializedAsync()
    {
        await JSRuntime
          .InvokeAsync<object>(
            "blazorFuncs.registerClient",
            new object[] { DotNetObjectReference.Create(this) }
          );
    }

    [JSInvokable("onupdateavailable")]
    public async Task<string> AppUpdate()
    {
        Console.WriteLine("New version available");
        updateReady = true;
        StateHasChanged();
        NotificationManager.Notify("Update available", "Please refresh the page", NotificationType.Warning, 0,
            new Syncfusion.Blazor.Notifications.ToastButton() { Content = "Refresh", OnClick = EventCallback.Factory.Create(this, RefreshPage) });
        return await Task.FromResult("Alerted client");
    }

    private void RefreshPage(MouseEventArgs mouseEventArgs) 
    {
        NavigationManager.NavigateTo("/", true);
    }
}